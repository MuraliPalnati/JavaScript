A class if it has a @Component it becomes a component, but where as if it has @NgModule it becomes a module.
components must be in the declarations of the module.
all the services which has the DI must be present in the providers of the component.

Component : class, selector, template 
-----------------------------------------------------------------------
import { Component,Input,Output,EventEmitter } from "@angular/core";

// this is a selector
@Component({
  selector: 'app-first',
  templateUrl: './first.component.html',// template
  styleUrls: ['./first.component.css'],
  providers :[] // Services
})
// this is a class
export class FirstComponent{
    name :string ='test';

    @Input() // this is used to pass the data from parent to the child component
    parentToChild : number;
}

Module:
---------------------------------------------------------------------------

import { NgModule } from '@angular/core';
import { BrowserModule } from '@angular/platform-browser'; //needs to run angular in all browsers
@NgModule({
  declarations: [
    AppComponent,
    FirstComponent
  ],
  imports: [
    BrowserModule,
    AppRoutingModule,
    HttpClientModule // this is for http sevice calls.
  ],
  providers: [],
  bootstrap: [AppComponent]
})
export class AppModule { }

Services:
--------------------------------------------------------------------------------


import {Injectable} from '@angular/core'

@Injectable()
export class CarService
{

}

http service : 
----------------------------------------------------------------------------------
from angular 5 onwards:
In Module:  
import {HttpClientModule} from '@angular/common/http';
Add to the imports in the app.module.ts. not required to add to the providers as HttpClientModule will implicitl do it.

In Service:
import { HttpClient } from '@angular/common/http';
constructor(private _http : HttpClient) { }

<httpProtocol> which needs to be added in the webapi service side.
<system.webServer>
    <httpProtocol>
      <customHeaders>
        <add name="Access-Control-Allow-Origin" value="*"/>
        <add name="Access-Control-Allow-Headers" value="Content-Type"/>
        <add name="Access-Control-Allow-Methods" value="GET,PUT,POST,DELETE"/>
      </customHeaders>
    </httpProtocol>
  </system.webServer>